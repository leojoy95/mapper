(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{216:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return p}));var a=n(1),r=n(9),o=(n(0),n(276)),i={id:"with-global-settings",title:"Global Settings",sidebar_label:"WithGlobalSettings"},c={id:"version-6.0.0/usages/init/with-global-settings",title:"Global Settings",description:"You can configure some **global settings** for the `AutoMapper` instance. At the moment, only [NamingConvention](../features/naming-convention.md) is the only **global setting**.",source:"@site/versioned_docs/version-6.0.0/usages/init/with-global-settings.md",permalink:"/docs/usages/init/with-global-settings",editUrl:"https://github.com/nartc/mapper/edit/master/automapper-docusaurus/versioned_docs/version-6.0.0/usages/init/with-global-settings.md",version:"6.0.0",sidebar_label:"WithGlobalSettings",sidebar:"version-6.0.0/docs",previous:{title:"Profile",permalink:"/docs/usages/init/add-profile"},next:{title:"Initialize",permalink:"/docs/usages/init/initialize"}},l=[],s={rightToc:l};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"You can configure some ",Object(o.b)("strong",{parentName:"p"},"global settings")," for the ",Object(o.b)("inlineCode",{parentName:"p"},"AutoMapper")," instance. At the moment, only ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/usages/features/naming-convention"}),"NamingConvention")," is the only ",Object(o.b)("strong",{parentName:"p"},"global setting"),".\nTo configure the ",Object(o.b)("strong",{parentName:"p"},"global settings"),", call ",Object(o.b)("inlineCode",{parentName:"p"},"withGlobalSettings()")," on the ",Object(o.b)("inlineCode",{parentName:"p"},"AutoMapper"),". ",Object(o.b)("inlineCode",{parentName:"p"},"withGlobalSettings()")," expects a ",Object(o.b)("inlineCode",{parentName:"p"},"AutoMapperGlobalSettings")," as its argument."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),"Mapper.withGlobalSettings({ sourceNamingConvention: PascalCaseNamingConvention, destinationNamingConvention: ... });\n")),Object(o.b)("p",null,"These ",Object(o.b)("strong",{parentName:"p"},"global settings")," will be applied to ALL ",Object(o.b)("inlineCode",{parentName:"p"},"Mappings")," on the ",Object(o.b)("inlineCode",{parentName:"p"},"AutoMapper")," instance. By default, both ",Object(o.b)("inlineCode",{parentName:"p"},"sourceNamingConvention")," and ",Object(o.b)("inlineCode",{parentName:"p"},"destinationNamingConvention")," are ",Object(o.b)("inlineCode",{parentName:"p"},"CamelCaseNamingConvention"),"."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),"interface AutoMapperGlobalSettings {\n  sourceNamingConvention?: Constructible<NamingConvention>;\n  destinationNamingConvention?: Constructible<NamingConvention>;\n}\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"We will learn more about ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/usages/features/naming-convention"}),"NamingConvention")," in a later section.")))}p.isMDXComponent=!0},276:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),p=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},b=function(e){var t=p(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},g=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),b=p(n),g=a,m=b["".concat(i,".").concat(g)]||b[g]||u[g]||o;return n?r.a.createElement(m,c({ref:t},s,{components:n})):r.a.createElement(m,c({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=g;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}g.displayName="MDXCreateElement"}}]);