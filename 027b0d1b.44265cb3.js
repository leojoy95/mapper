(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{133:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return o})),t.d(n,"rightToc",(function(){return s})),t.d(n,"default",(function(){return b}));var a=t(1),r=t(9),p=(t(0),t(276)),i={id:"inheritance",title:"Inheritance",sidebar_label:"Inheritance"},o={id:"version-5.0.12/usages/features/inheritance",title:"Inheritance",description:"`@nartc/automapper` supports mapping inheritance with some caveat around `Generics Typing`",source:"@site/versioned_docs/version-5.0.12/usages/features/inheritance.md",permalink:"/docs/5.0.12/usages/features/inheritance",editUrl:"https://github.com/nartc/mapper/edit/master/automapper-docusaurus/versioned_docs/version-5.0.12/usages/features/inheritance.md",version:"5.0.12",sidebar_label:"Inheritance",sidebar:"version-5.0.12/docs",previous:{title:"Flattening",permalink:"/docs/5.0.12/usages/features/flattening"},next:{title:"Handle plain JavaScript object",permalink:"/docs/5.0.12/usages/features/plain-object"}},s=[{value:"Notes",id:"notes",children:[]}],c={rightToc:s};function b(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(p.b)("wrapper",Object(a.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(p.b)("p",null,Object(p.b)("inlineCode",{parentName:"p"},"@nartc/automapper")," supports mapping inheritance with some caveat around ",Object(p.b)("inlineCode",{parentName:"p"},"Generics Typing")),Object(p.b)("pre",null,Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),"class Base {\n  @AutoMap()\n  createdDate?: Date;\n  @AutoMap()\n  updatedDate?: Date;\n  @AutoMap()\n  id?: string;\n}\n\nclass BaseVm {\n  @AutoMap()\n  created?: Date;\n  @AutoMap()\n  updated?: Date;\n  @AutoMap()\n  recordId?: string;\n}\n\nclass User extends Base {\n  @AutoMap()\n  firstName: string;\n  @AutoMap()\n  lastName: string;\n  @AutoMap()\n  about: string;\n}\n\nclass UserVm extends BaseVm {\n  @AutoMap()\n  firstName: string;\n  @AutoMap()\n  lastName: string;\n  @AutoMap()\n  fullName: string;\n  @AutoMap()\n  about: string;\n}\n\nMapper.createMap(User, UserVm).forMember(\n  d => d.fullName,\n  opts => opts.mapFrom(s => s.firstName + ' ' + s.lastName)\n);\n")),Object(p.b)("p",null,"When you run ",Object(p.b)("inlineCode",{parentName:"p"},"Mapper.map(user, UserVm)"),", you will get an ",Object(p.b)("inlineCode",{parentName:"p"},"Error")," showing 3 ",Object(p.b)("strong",{parentName:"p"},"unmapped properties")," on ",Object(p.b)("inlineCode",{parentName:"p"},"UserVm"),": ",Object(p.b)("inlineCode",{parentName:"p"},"created"),", ",Object(p.b)("inlineCode",{parentName:"p"},"updated"),", and ",Object(p.b)("inlineCode",{parentName:"p"},"recordId"),".\n",Object(p.b)("inlineCode",{parentName:"p"},"UserVm")," is a subclass of ",Object(p.b)("inlineCode",{parentName:"p"},"BaseVm")," so ",Object(p.b)("inlineCode",{parentName:"p"},"UserVm")," inherits all ",Object(p.b)("em",{parentName:"p"},"non-private")," properties from ",Object(p.b)("inlineCode",{parentName:"p"},"BaseVm")," which are ",Object(p.b)("inlineCode",{parentName:"p"},"created"),", ",Object(p.b)("inlineCode",{parentName:"p"},"updated"),", and ",Object(p.b)("inlineCode",{parentName:"p"},"recordId"),".\n",Object(p.b)("inlineCode",{parentName:"p"},"@nartc/automapper"),", by default, cannot ",Object(p.b)("em",{parentName:"p"},"see")," and ",Object(p.b)("em",{parentName:"p"},"automap")," ",Object(p.b)("inlineCode",{parentName:"p"},"createdDate -> created"),", ",Object(p.b)("inlineCode",{parentName:"p"},"updatedDate -> updated"),", ",Object(p.b)("inlineCode",{parentName:"p"},"id -> recordId"),"."),Object(p.b)("blockquote",null,Object(p.b)("p",{parentName:"blockquote"},"If ",Object(p.b)("inlineCode",{parentName:"p"},"Base")," and ",Object(p.b)("inlineCode",{parentName:"p"},"BaseVm")," share the same properties names, then everything will work without additional work")),Object(p.b)("p",null,"To fix this issue, you need to ",Object(p.b)("inlineCode",{parentName:"p"},"createMap()")," for ",Object(p.b)("inlineCode",{parentName:"p"},"Base")," and ",Object(p.b)("inlineCode",{parentName:"p"},"BaseVm")," then include ",Object(p.b)("inlineCode",{parentName:"p"},"Mapping<Base, BaseVm>")," when you ",Object(p.b)("inlineCode",{parentName:"p"},"createMap()")," for ",Object(p.b)("inlineCode",{parentName:"p"},"User")," and ",Object(p.b)("inlineCode",{parentName:"p"},"UserVm")),Object(p.b)("pre",null,Object(p.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),"Mapper.createMap(Base, BaseVm)\n  .forMember(\n    d => d.created,\n    opts => opts.mapFrom(s => s.createdAt)\n  )\n  .forMember(\n    d => d.updated,\n    opts => opts.mapFrom(s => s.updatedAt)\n  )\n  .forMember(\n    d => d.recordId,\n    opts => opts.mapFrom(s => s.id)\n  );\n\nMapper.createMap(User, UserVm, { includeBase: [Base, BaseVm] }) // <-- include base mapping\n  .forMember(\n    d => d.fullName,\n    opts => opts.mapFrom(s => s.firstName + ' ' + s.lastName)\n  );\n")),Object(p.b)("p",null,"Now when you run ",Object(p.b)("inlineCode",{parentName:"p"},"Mapper.map(user, UserVm)"),", the ",Object(p.b)("strong",{parentName:"p"},"unampped error")," will be gone."),Object(p.b)("h3",{id:"notes"},"Notes"),Object(p.b)("ul",null,Object(p.b)("li",{parentName:"ul"},Object(p.b)("inlineCode",{parentName:"li"},"Generics")," for ",Object(p.b)("inlineCode",{parentName:"li"},"includeBase")," is a little tricky. You need to provide the ",Object(p.b)("strong",{parentName:"li"},"base mapping")," in that shape and in that order."),Object(p.b)("li",{parentName:"ul"},"Custom ",Object(p.b)("inlineCode",{parentName:"li"},"forMember()")," for a inherited member on the ",Object(p.b)("strong",{parentName:"li"},"subclass mapping")," will override the ",Object(p.b)("strong",{parentName:"li"},"base mapping"))))}b.isMDXComponent=!0},276:function(e,n,t){"use strict";t.d(n,"a",(function(){return l})),t.d(n,"b",(function(){return u}));var a=t(0),r=t.n(a);function p(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){p(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},p=Object.keys(e);for(a=0;a<p.length;a++)t=p[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(a=0;a<p.length;a++)t=p[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=r.a.createContext({}),b=function(e){var n=r.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o({},n,{},e)),t},l=function(e){var n=b(e.components);return r.a.createElement(c.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},d=Object(a.forwardRef)((function(e,n){var t=e.components,a=e.mdxType,p=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),l=b(t),d=a,u=l["".concat(i,".").concat(d)]||l[d]||m[d]||p;return t?r.a.createElement(u,o({ref:n},c,{components:t})):r.a.createElement(u,o({ref:n},c))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var p=t.length,i=new Array(p);i[0]=d;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var c=2;c<p;c++)i[c]=t[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);